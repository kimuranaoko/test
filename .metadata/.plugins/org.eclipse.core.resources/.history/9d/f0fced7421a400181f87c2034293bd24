package com.internousdev.sampleweb.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.internousdev.sampleweb.dto.CartInfoDTO;
import com.internousdev.sampleweb.util.DBConnector;

public class CartInfoDAO {

	public List<CartInfoDTO> getCartInfoDtoList(String loginId){

		DBConnector dbConnector = new DBConnector();
		Connection connection = dbConnector.getConnection();
		List<CartInfoDTO> cartInfoDtoList = new ArrayList<CartInfoDTO>();

		String sql ="select"
				+ "ci.id as id,"
				+ "ci.user_id as user_id,"
				+ "ci.temp_user_id as temp_user_id,"
				+ "ci.product_id as product_id,"
				+ "sum(ci.product_count) as product_count,"
				+ "pi.price as price,"
				+ "pi.regist_date as regist_date,"
				+ "pi.update_date as regist_date,"
				+ "pi.product_name as product_name,"
				+ "pi.product_name_kana as product_name_kana,"
				+ "pi.product_description as product_description,"
				+ "pi.category_id as category_id,"
				+ "pi.image_file_path as image_file_path,"
				+ "pi.image_file_name as image_file_name,"
				+ "pi.release_date as release_date,"
				+ "pi.release_company as release_company,"
				+ "pi.status as status,"
				+ "(sum(ci.product_count)*price) as subtotal,"
				+ "FROM cart_info as ci,"
				+ "LEFT JOIN product_info as pi,"
				+ "ON ci.product_info as pi,"
				+ "WHERE ci.user_id = ?,"
				+ "group by product_id";
		try{
			PreparedStatement preparedStatement = connection.prepareStatement(sql);
			System.out.println("cartinfodao-getcartinfodtolist" + loginId);
			preparedStatement.setString(1, loginId);
			ResultSet resultSet = preparedStatement.executeQuery();
			while(resultSet.next()){
				CartInfoDTO cartInfoDTO = new CartInfoDTO();
				cartInfoDTO.setId(resultSet.getInt("id"));
				cartInfoDTO.setUserId(resultSet.getString("user_id"));
				cartInfoDTO.setTempUserId(resultSet.getString("temp_user_id"));
				cartInfoDTO.setProductId(resultSet.getInt("product_id"));
				cartInfoDTO.setProductCount(resultSet.getInt("product_count"));
				cartInfoDTO.setPrice(resultSet.getInt("price"));
				cartInfoDTO.setRegistDate(resultSet.getDate("regist_date"));
				cartInfoDTO.setUpdateDate(resultSet.getDate("update_date"));
				cartInfoDTO.setProductName(resultSet.getString("product_name"));
				cartInfoDTO.setProductNameKana(resultSet.getString("product_name_kana"));
				cartInfoDTO.setProductDescription(resultSet.getString("product_name"));
				cartInfoDTO.setCategoryId(resultSet.getInt("category_id"));
				cartInfoDTO.setImageFilePath(resultSet.getString("image_file_path"));
				cartInfoDTO.setImageFileName(resultSet.getString("image_file_name"));
				cartInfoDTO.setReleaseDate(resultSet.getDate("release_date"));
				cartInfoDTO.setReleaseCompany(resultSet.getDate(resultSet.getString("release_company")));
				cartInfoDTO.setStatus(resultSet.getString("status"));
				cartInfoDTO.setSubtotal(resultSet.getInt("subtotal"));
			}
		}
	}

}
